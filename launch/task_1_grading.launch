<launch>
  <arg name="model" default="waffle"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="open_rviz" default="true"/>

  <arg name="grade_unseen_env" default="false" />
  <arg name="node_start_delay" default="6.0" />
  <arg name="house_area" default="92.1" />
  <arg name="house_unseen_area" default="173.4" />

  <env name="GAZEBO_MODEL_PATH" value="$(find final_project)/models" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find final_project)/worlds/house_v3.world" unless="$(arg grade_unseen_env)"/>
    <arg name="world_name" value="$(find final_project)/worlds/house_unseen_v3.world" if="$(arg grade_unseen_env)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find final_project)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
    <remap from="robot_description" to="robot_description" />
    <remap from="joint_states" to="joint_states" />
  </node> 
  
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_waffle -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- start gmapping to build map -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_gmapping.launch">
    <arg name="model" value="$(arg model)"/>  
  </include>

  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find final_project)/rviz/turtlebot3_navigation_custom.rviz"/>
  </group>

  <node pkg="final_project" type="task_1.py" name="explorer" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

  <group unless="$(arg grade_unseen_env)">
    <node pkg="final_project" type="mapping_metrics.py" name="mapping_grader" output="screen" args="-a $(arg house_area)"/>
  </group>

  <group if="$(arg grade_unseen_env)">
    <node pkg="final_project" type="mapping_metrics.py" name="mapping_grader" output="screen" args="-a $(arg house_unseen_area)"/>
  </group>

</launch>
